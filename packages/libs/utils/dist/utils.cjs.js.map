{"version":3,"file":"utils.cjs.js","sources":["../src/parseJSON.js","../src/setIf.js","../src/setIfElse.js"],"sourcesContent":["import { get, isUndefined } from 'lodash-es'\r\n\r\nfunction parseJSON(json) {\r\n    const reviver = (key, value) => {\r\n        if (value && typeof value === \"string\") {\r\n            let regrex1 = /^\\s*function\\s*[\\d\\w]*\\s*\\([\\d\\w,\\s]*[^,]\\)\\s*{[\\s\\S]*}\\s*;?\\s*/, // function(){};\r\n                regrex2 = /^\\s*\\([a-zA-Z0-1,\\s]*[^,]\\)\\s*(=>)\\s*{[\\s\\S]*}\\s*;?\\s*$/, // () => {};\r\n                regrex3 = /^\\s*```js([\\s\\S]*)```\\s*$/  // ```js new Object() ```\r\n\r\n            if ((regrex1.test(value) || regrex2.test(value))) {\r\n                // let startBody = value.indexOf('{') + 1;\r\n                // let endBody = value.lastIndexOf('}');\r\n                // let startArgs = value.indexOf('(') + 1;\r\n                // let endArgs = value.indexOf(')');\r\n                // return new Function(value.substring(startArgs, endArgs), value.substring(startBody, endBody));\r\n                try {\r\n                    return new Function(`return ${value}`)()\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error string function in JSON: ${value}`)\r\n                }\r\n            } else if (regrex3.test(value)) {\r\n                try {\r\n                    let jsStr = regrex3.exec(value),\r\n                        js = eval(get(jsStr, 1))\r\n                    return isUndefined(js) ? null : js\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error JS in JSON: ${value} \\n`, err)\r\n                }\r\n            }\r\n\r\n        }\r\n        return value;\r\n    }\r\n\r\n\r\n    return JSON.parse(json, reviver)\r\n}\r\n\r\nexport default parseJSON","import {set} from 'lodash-es'\r\n\r\nfunction setIf(data, condition, path, value) {\r\n    if (condition) set(data, path, value)\r\n}\r\n\r\nexport default setIf","import {set} from 'lodash-es'\r\n\r\nfunction setIfElse(data, condition, v1, v2) {\r\n    if(condition){\r\n        set(data, path, v1)\r\n    } else {\r\n        set(data, path, v2)\r\n    }\r\n}\r\n\r\nexport default setIfElse"],"names":["parseJSON","json","reviver","key","value","regrex1","regrex2","regrex3","test","Function","err","console","error","jsStr","exec","js","eval","get","isUndefined","JSON","parse","setIf","data","condition","path","set","setIfElse","v1","v2"],"mappings":";;;;;;;;;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAC5B,QAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACpC,UAAIC,OAAO,GAAG,iEAAd;AAAA;AACIC,MAAAA,OAAO,GAAG,yDADd;AAAA;AAEIC,MAAAA,OAAO,GAAG,2BAFd,CADoC;;AAKpC,UAAKF,OAAO,CAACG,IAAR,CAAaJ,KAAb,KAAuBE,OAAO,CAACE,IAAR,CAAaJ,KAAb,CAA5B,EAAkD;AAC9C;AACA;AACA;AACA;AACA;AACA,YAAI;AACA,iBAAO,IAAIK,QAAJ,kBAAuBL,KAAvB,IAAP;AACH,SAFD,CAGA,OAAOM,GAAP,EAAY;AACRC,UAAAA,OAAO,CAACC,KAAR,0CAAgDR,KAAhD;AACH;AACJ,OAZD,MAYO,IAAIG,OAAO,CAACC,IAAR,CAAaJ,KAAb,CAAJ,EAAyB;AAC5B,YAAI;AACA,cAAIS,KAAK,GAAGN,OAAO,CAACO,IAAR,CAAaV,KAAb,CAAZ;AAAA,cACIW,EAAE,GAAGC,IAAI,CAACC,YAAG,CAACJ,KAAD,EAAQ,CAAR,CAAJ,CADb;AAEA,iBAAOK,oBAAW,CAACH,EAAD,CAAX,GAAkB,IAAlB,GAAyBA,EAAhC;AACH,SAJD,CAKA,OAAOL,GAAP,EAAY;AACRC,UAAAA,OAAO,CAACC,KAAR,6BAAmCR,KAAnC,UAA+CM,GAA/C;AACH;AACJ;AAEJ;;AACD,WAAON,KAAP;AACH,GA/BD;;AAkCA,SAAOe,IAAI,CAACC,KAAL,CAAWnB,IAAX,EAAiBC,OAAjB,CAAP;AACH;;ACpCD,SAASmB,KAAT,CAAeC,IAAf,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCpB,KAAtC,EAA6C;AACzC,MAAImB,SAAJ,EAAeE,YAAG,CAACH,IAAD,EAAOE,IAAP,EAAapB,KAAb,CAAH;AAClB;;ACFD,SAASsB,SAAT,CAAmBJ,IAAnB,EAAyBC,SAAzB,EAAoCI,EAApC,EAAwCC,EAAxC,EAA4C;AACxC,MAAGL,SAAH,EAAa;AACTE,IAAAA,YAAG,CAACH,IAAD,EAAOE,IAAP,EAAaG,EAAb,CAAH;AACH,GAFD,MAEO;AACHF,IAAAA,YAAG,CAACH,IAAD,EAAOE,IAAP,EAAaI,EAAb,CAAH;AACH;AACJ;;;;;;;"}