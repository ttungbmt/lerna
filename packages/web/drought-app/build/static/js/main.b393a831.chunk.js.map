{"version":3,"sources":["../external \"React\"","../../src/parseJSON.js","../../../libs/react/core/src/serviceWorker.js","../../../libs/redux.toolkit/src/rootReducer.js","store.js","../../../libs/redux.toolkit/src/configureStore.js","reducers/index.js","../../src/index.js","../../src/layouts/map/index.js","../../src/layouts/map/config.js","../../src/layouts/default/index.js","../../../libs/geo/src/getFeatureInfoUrl.js","../../../libs/geo/src/getWMSLayers.js","../../../libs/geo/src/getWMSLayer.js","../../../libs/geo/src/posToGeoJSON.js","../../src/TileWMSLayer.js","../../src/bootstrap.js","../../src/baselayers.js","../../src/MapContainer.js","../../src/components/layers/WMSTileLayer.js","../../src/Select.js","../../src/Input.js","../../src/Field.js","../../src/useFetch.js","contexts/store/index.js","FormMain.js","MapContent.js","App.js","index.js","../external \"ReactDOM\""],"names":["module","exports","React","parseJSON","json","reviver","key","value","regrex1","regrex2","regrex3","Function","err","console","jsStr","js","eval","get","isUndefined","JSON","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","message","createReducer","asyncReducers","combineReducers","store","initialState","history","middleware","asyncR1","router","connectRouter","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","getDefaultMiddleware","loadingBarMiddleware","promiseTypeSuffixes","push","routerMiddleware","configureDefaultStore","reducer","preloadedState","runSaga","run","injectedSagas","injectedReducers","asyncR2","configureStore","createBrowserHistory","flex","props","row","column","inline","block","floatRight","floatLeft","wrap","grow","shrink","bold","regular","uppercase","relative","absolute","itemsCenter","contentCenter","contentBetween","selfCenter","justifyCenter","pv","ph","mv","mh","textXs","textSm","textBase","textLg","textXl","text2Xl","text3Xl","text4Xl","text5Xl","text6Xl","cursor","outline","style","children","outter","inner","clone","setIf","isBoolean","assignIf","pt","pb","mt","mb","pl","pr","ml","mr","data","condition","path","defaultV","set","assign","Box","height","width","undefined","memo","defaultProps","title","self","appName","logo","header","background","PUBLIC_URL","menu","aside","footer","LayoutMap","bg_url","className","as","size","name","content","LayoutDefault","src","alt","color","fontSize","fontWeight","hello","getFeatureInfoUrl","layer","latlng","params","map","_map","url","_url","point","latLngToContainerPoint","getZoom","getSize","bounds","getBounds","toBBoxString","wmsParams","defaultParams","request","service","srs","transparent","styles","version","env","viewparams","format","options","bbox","y","x","layers","query_layers","info_format","Util","extend","Object","keys","forEach","round","getParamString","getWMSLayers","getWMSLayer","posToGeoJSON","getOptions","TileWMSLayer","initialize","TileLayer","this","uniqid","SingleTileWMSLayer","L","tileWMSLayer","tiled","iconRetinaUrl","iconUrl","shadowUrl","markerShadow","google","openstreet","terrain","hybrid","BaseLayer","LayersControl","Overlay","MapContainer","loaded","center","zoom","position","active","checked","EVENTS_RE","WMSTileLayer","fromProps","toProps","preUuid","prevUrl","prevProps","prevParams","uuid","isEqual","superOptions","GridLayer","PropTypes","isRequired","withLeaflet","transOpts","opts","isArray","label","v","useState","setData","dropProps","omit","depends","ajaxSettings","placeholder","control","useFormContext","useEffect","el","$","loadingText","emptyMsg","useUrl","Form","ref","defaultValue","selected","useRef","Control","getData","a","transformResponse","axios","isJSON","result","isString","isFunction","useFetch","manual","useQuery","loading","caseReducer","payload","khuvuc","action","includes","type","StoreContext","createContext","StoreProvider","useImmerReducer","dispatch","Provider","popup","Badge","useContext","dsp","methods","useForm","initialData","p","results","onChange","e","parseInt","target","find","id","pop","setPop","useLeaflet","showInfo","lat","lng","eachLayer","l","_wmsVersion","infoUrl","http","toFixed","val","on","off","useMapClick","Popup","zIndex","cql_filter","cql","compose","hot","setLoaded","Layout","LAYOUT","Map","setTimeout","slot","Brand","Nav","Link","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b393a831.chunk.js","sourcesContent":["module.exports = React;","import { get, isUndefined } from 'lodash-es'\r\n\r\nfunction parseJSON(json) {\r\n    const reviver = (key, value) => {\r\n        if (value && typeof value === \"string\") {\r\n            let regrex1 = /^\\s*function\\s*[\\d\\w]*\\s*\\([\\d\\w,\\s]*[^,]\\)\\s*{[\\s\\S]*}\\s*;?\\s*/, // function(){};\r\n                regrex2 = /^\\s*\\([a-zA-Z0-1,\\s]*[^,]\\)\\s*(=>)\\s*{[\\s\\S]*}\\s*;?\\s*$/, // () => {};\r\n                regrex3 = /^\\s*```js([\\s\\S]*)```\\s*$/  // ```js new Object() ```\r\n\r\n            if ((regrex1.test(value) || regrex2.test(value))) {\r\n                // let startBody = value.indexOf('{') + 1;\r\n                // let endBody = value.lastIndexOf('}');\r\n                // let startArgs = value.indexOf('(') + 1;\r\n                // let endArgs = value.indexOf(')');\r\n                // return new Function(value.substring(startArgs, endArgs), value.substring(startBody, endBody));\r\n                try {\r\n                    return new Function(`return ${value}`)()\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error string function in JSON: ${value}`)\r\n                }\r\n            } else if (regrex3.test(value)) {\r\n                try {\r\n                    let jsStr = regrex3.exec(value),\r\n                        js = eval(get(jsStr, 1))\r\n                    return isUndefined(js) ? null : js\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error JS in JSON: ${value} \\n`, err)\r\n                }\r\n            }\r\n\r\n        }\r\n        return value;\r\n    }\r\n\r\n\r\n    return JSON.parse(json, reviver)\r\n}\r\n\r\nexport default parseJSON","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\r\n\r\nconst createReducer = (asyncReducers = {}, history) =>\r\n    combineReducers({\r\n\r\n        ...asyncReducers\r\n    });\r\n\r\nexport default createReducer\r\n","import {createBrowserHistory} from 'history'\r\nimport {configureStore} from \"@ttungbmt/redux.toolkit\";\r\n\r\nimport reducers from \"./reducers\"\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst store = configureStore({}, reducers, history)\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n    module.hot.accept('./reducers', () => {\r\n        const newRootReducer = store.createReducer(reducers)\r\n        store.replaceReducer(newRootReducer)\r\n    })\r\n}\r\n\r\nexport default store","import { routerMiddleware } from 'connected-react-router'\r\nimport { loadingBarMiddleware } from 'react-redux-loading-bar'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {configureStore as configureDefaultStore, getDefaultMiddleware,} from '@reduxjs/toolkit'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport createReducer from './rootReducer.js'\r\n\r\nexport default function configureStore(initialState = {}, asyncReducers = {}, history) {\r\n    let middleware = [],\r\n        asyncR1 = {\r\n            router: connectRouter(history),\r\n            ...asyncReducers\r\n        }\r\n\r\n\r\n    const reduxSagaMonitorOptions = {};\r\n    const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\r\n\r\n    middleware = [\r\n        ...getDefaultMiddleware(),\r\n        sagaMiddleware,\r\n        loadingBarMiddleware({\r\n            promiseTypeSuffixes: ['REQUEST', 'SUCCESS', 'FAILURE'],\r\n        })\r\n    ]\r\n\r\n    if(history) middleware.push(routerMiddleware(history))\r\n\r\n    const store = configureDefaultStore({\r\n        reducer: createReducer(asyncR1),\r\n        preloadedState: initialState,\r\n        middleware,\r\n    })\r\n\r\n\r\n    // Extensions\r\n    store.runSaga = sagaMiddleware.run;\r\n    store.injectedSagas = {}; // Saga registry\r\n    store.injectedReducers = {}; // Reducer registry\r\n    store.createReducer = (asyncR2) => createReducer({...asyncR1, ...asyncR2})\r\n\r\n    // // Make reducers hot reloadable\r\n    // if (process.env.NODE_ENV === 'development' && module.hot) {\r\n    //     module.hot.accept('./reducers', () => {\r\n    //         const newRootReducer = createReducer(store.injectedReducers)\r\n    //         store.replaceReducer(newRootReducer)\r\n    //     })\r\n    // }\r\n\r\n    return store\r\n}\r\n\r\n","\r\nexport default {\r\n\r\n}","import React, { memo } from 'react'\r\nimport BaseBox from '@material-ui/core/Box';\r\nimport { set, isBoolean, assign, clone } from 'lodash-es'\r\n\r\n\r\n/**\r\n * @render react\r\n * @name Box\r\n * Palette: color, bgcolor\r\n * Media: xs, sm, md\r\n * Border: border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius\r\n * Display: component, display, overflow, textOverflow, visibility, whiteSpace\r\n * Flexbox: flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf\r\n * Position: position, zIndex, top, right, bottom, left\r\n * Size: width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing,\r\n * Spacing: m, mt, mr, mb, ml, mx, my, p, pt, pr, pb, pl, px, py,\r\n * Typography: fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign,\r\n * @example\r\n * <Box>Accept</Tippy>\r\n */\r\n\r\nfunction Box(props) {\r\n    const {\r\n        flex, row, column, inline, block, floatRight, floatLeft, wrap, grow, shrink, bold, regular, uppercase, relative, absolute,\r\n        itemsCenter, contentCenter, contentBetween, selfCenter, justifyCenter, pv, ph, mv, mh,\r\n        textXs, textSm, textBase, textLg, textXl, text2Xl, text3Xl, text4Xl, text5Xl, text6Xl,\r\n        cursor, outline,\r\n        style,\r\n        children,\r\n        ...outter\r\n    } = props\r\n\r\n    let inner = {\r\n        style: clone(style)\r\n    }\r\n\r\n    setIf(inner, textXs, 'fontSize', '.75rem')\r\n    setIf(inner, textSm, 'fontSize', '.875rem')\r\n    setIf(inner, textBase, 'fontSize', '1rem')\r\n    setIf(inner, textLg, 'fontSize', '1.125rem')\r\n    setIf(inner, textXl, 'fontSize', '1.25rem')\r\n    setIf(inner, text2Xl, 'fontSize', '1.5rem')\r\n    setIf(inner, text3Xl, 'fontSize', '1.875rem')\r\n    setIf(inner, text4Xl, 'fontSize', '2.25rem')\r\n    setIf(inner, text5Xl, 'fontSize', '3rem')\r\n    setIf(inner, text6Xl, 'fontSize', '4rem')\r\n    setIf(inner, flex, 'display', 'flex')\r\n    setIf(inner, itemsCenter, 'alignItems', 'center')\r\n    setIf(inner, contentCenter, 'justifyContent', 'center')\r\n    setIf(inner, contentBetween, 'justifyContent', 'space-between')\r\n    setIf(inner, selfCenter, 'alignSelf', 'center')\r\n    setIf(inner, justifyCenter, 'justifyContent', 'center')\r\n    setIf(inner, inline, 'display', 'display')\r\n    setIf(inner, block, 'display', 'block')\r\n    setIf(inner, row, 'flexDirection', 'row')\r\n    setIf(inner, column, 'flexDirection', 'column')\r\n    setIf(inner, wrap, 'flexWrap', 'wrap')\r\n    setIf(inner, shrink, 'flexShrink', isBoolean(shrink) ? 1 : shrink)\r\n    setIf(inner, grow, 'flexGrow', isBoolean(grow) ? 1 : grow)\r\n    setIf(inner, bold, 'fontWeight', 500)\r\n    setIf(inner, uppercase, 'style.textTransform', 'uppercase')\r\n    setIf(inner, regular, 'fontWeight', 'fontWeightRegular')\r\n    setIf(inner, relative, 'position', 'relative')\r\n    setIf(inner, absolute, 'position', 'absolute')\r\n    setIf(inner, floatRight, 'style.float', 'right')\r\n    setIf(inner, floatLeft, 'style.float', 'left')\r\n    setIf(inner, cursor, 'style.cursor', 'pointer')\r\n    setIf(inner, outline, 'style.outline', outline)\r\n    setIf(inner, outline, 'style.outline', outline)\r\n\r\n\r\n    assignIf(inner, pv, {pt: pv, pb: pv})\r\n    assignIf(inner, mv, {mt: mv, mb: mv})\r\n    assignIf(inner, ph, {pl: ph, pr: ph})\r\n    assignIf(inner, mh, {ml: mh, mr: mh})\r\n\r\n    return (\r\n        <BaseBox {...inner} {...outter}>\r\n            {children}\r\n        </BaseBox>\r\n    )\r\n}\r\n\r\nconst setIf = (data, condition, path, value, defaultV) => {\r\n    if (condition) {\r\n        set(data, path, value)\r\n    }\r\n    // else {\r\n    //     !isUndefined(defaultV) && set(data, path, defaultV)\r\n    // }\r\n}\r\n\r\nconst assignIf = (data, condition, value) => {\r\n    if (condition) data = assign(data, value)\r\n}\r\n\r\n\r\nBox.defaultProps = {\r\n    style: {},\r\n    height: undefined,\r\n    width: undefined,\r\n}\r\n\r\nexport default memo(Box)","import React, {memo} from 'react'\r\nimport * as Space from 'react-spaces'\r\nimport {Slot} from 'react-slot'\r\nimport {get} from 'lodash-es'\r\nimport Box from '@ttungbmt/react.ui.box'\r\nimport config from './config'\r\n\r\nconst defaultProps = {\r\n    config\r\n}\r\n\r\nconst LayoutMap = memo(({children, config}) => {\r\n    let bg_url = get(config, 'header.self.background')\r\n\r\n    return (\r\n        <Space.ViewPort className='layout-map'>\r\n            <Space.Top as=\"header\" size={55} style={{background: `url(${bg_url})`}}>\r\n                <Slot name='header' as='header' content={children}/>\r\n            </Space.Top>\r\n            <Space.Fill as=\"main\">\r\n                <Slot content={children}>\r\n                    <Space.LeftResizable as=\"aside\" size={380}>\r\n                        <Slot name=\"left-sidebar\" content={children}/>\r\n                    </Space.LeftResizable>\r\n                    <Space.Fill>\r\n                        <Space.Top size={0}>\r\n                            <Slot name=\"map-toolbar\" content={children}/>\r\n                        </Space.Top>\r\n                        <Space.Fill>\r\n                            <Slot name=\"map-content\" content={children}/>\r\n                        </Space.Fill>\r\n                    </Space.Fill>\r\n                    <Space.RightResizable as=\"aside\" size={0}>\r\n                        <Slot name=\"right-sidebar\" content={children}/>\r\n                    </Space.RightResizable>\r\n                </Slot>\r\n            </Space.Fill>\r\n\r\n            <Space.BottomResizable as=\"footer\" size={0}>\r\n                <Slot name='footer' content={children}/>\r\n            </Space.BottomResizable>\r\n        </Space.ViewPort>\r\n    )\r\n})\r\n\r\nfunction Brand({logo, title}){\r\n    return (\r\n        <Box flex height={1} itemsCenter>\r\n            {logo && <Box mh={1}><img src={logo} alt=\"\" style={{height: 30}}/></Box>}\r\n            <Box ml={2} uppercase color=\"#0093dd\" fontSize={21} fontWeight={700}>{title}</Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nLayoutMap.defaultProps = defaultProps\r\n\r\nLayoutMap.Brand = memo(Brand)\r\n\r\nexport default LayoutMap","const {PUBLIC_URL} = process.env\r\n\r\nconst config = {\r\n    title: 'Layout Map',\r\n    self: {\r\n        appName: 'Name',\r\n        logo: ''\r\n    },\r\n    header: {\r\n        self: {\r\n            background: PUBLIC_URL+'/assets/images/bg_header.png'\r\n        },\r\n        menu: {\r\n\r\n        }\r\n    },\r\n    aside: {\r\n\r\n    },\r\n    footer: {\r\n        self: {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default config\r\n","import React, {memo} from 'react'\r\nimport * as Space from 'react-spaces'\r\nimport {Slot} from 'react-slot'\r\nimport config from \"../map/config\";\r\nimport LayoutMap from \"../map\";\r\n\r\nfunction LayoutDefault({children}) {\r\n    return (\r\n        <Space.ViewPort className='layout-default'>\r\n            <Space.Top as=\"header\" size={55}>\r\n                <Slot name='header' as='header' content={children}/>\r\n            </Space.Top>\r\n            <Space.Fill as=\"main\">\r\n                <Slot content={children} />\r\n            </Space.Fill>\r\n            <Space.BottomResizable as=\"footer\" size={100}>\r\n                <Slot name='footer' content={children}/>\r\n            </Space.BottomResizable>\r\n        </Space.ViewPort>\r\n    )\r\n}\r\n\r\nLayoutDefault.config = {\r\n    hello: '123'\r\n}\r\n\r\nexport default memo(LayoutDefault)","import {round} from 'lodash-es'\r\nimport {Util} from 'leaflet'\r\n\r\nfunction getFeatureInfoUrl(layer, latlng, params) {\r\n    const map = layer._map;\r\n    const url = layer._url;\r\n\r\n    let point = map.latLngToContainerPoint(latlng, map.getZoom()),\r\n        size = map.getSize(),\r\n        bounds = map.getBounds().toBBoxString(),\r\n        wmsParams = layer.wmsParams;\r\n\r\n    // var sw = bounds.getSouthWest(),\r\n    //     ne = bounds.getNorthEast(),\r\n    //     sw = crs.projection._proj.forward([sw.lng, sw.lat]),\r\n    //     ne = crs.projection._proj.forward([ne.lng, ne.lat]),\r\n    //     bbox = [sw.join(','), ne.join(',')].join(',');\r\n\r\n    let defaultParams = {\r\n        request: 'GetFeatureInfo',\r\n        service: 'WMS',\r\n        srs: 'EPSG:4326', //layer._crs.code,\r\n        transparent: wmsParams.transparent,\r\n        styles: wmsParams.styles,\r\n        version: wmsParams.version, //layer._wmsVersion,\r\n        env: wmsParams.env,\r\n        viewparams: wmsParams.viewparams,\r\n        format: layer.options.format,\r\n        bbox: bounds,\r\n        height: size.y,\r\n        width: size.x,\r\n        layers: layer.options.layers,\r\n        query_layers: layer.options.layers,\r\n        info_format: 'application/json'\r\n    };\r\n\r\n    params = Util.extend(defaultParams, params || {});\r\n    // Remove undefined field from object\r\n    Object.keys(params).forEach(key => params[key] === undefined ? delete params[key] : '');\r\n\r\n    params[params.version === '1.3.0' ? 'i' : 'x'] = round(point.x); // Fix WMS X and Y incorrectly specified\r\n    params[params.version === '1.3.0' ? 'j' : 'y'] = round(point.y);\r\n\r\n    return url + Util.getParamString(params, url, true);\r\n}\r\n\r\nexport default getFeatureInfoUrl","import L from 'leaflet'\r\n\r\nfunction getWMSLayers(map) {\r\n    let layer = []\r\n\r\n    map.eachLayer(l => {\r\n        if(l instanceof L.TileLayer.WMS) layer.push(l)\r\n    })\r\n\r\n    let timestamp = (new Date()).getTime(),\r\n        layerOrdered = [];\r\n\r\n    Object.keys(layer).sort().forEach(function(key) {\r\n        layerOrdered[key] = layer[key];\r\n        layerOrdered[key]._timestamp = timestamp\r\n    });\r\n    return layerOrdered\r\n}\r\n\r\nexport default getWMSLayers","import getWMSLayers from './getWMSLayers'\r\nimport { find } from 'lodash-es'\r\n\r\nfunction getWMSLayer(map, predicate) {\r\n    return find(getWMSLayers(map), predicate)\r\n}\r\n\r\nexport default getWMSLayer","import L from 'leaflet'\r\n\r\nfunction posToGeoJSON(position) {\r\n    return L.marker(position).toGeoJSON()\r\n}\r\n\r\nexport default posToGeoJSON","import L, { TileLayer } from 'leaflet'\r\nimport 'leaflet.nontiledlayer'\r\nimport { getFeatureInfoUrl } from '@ttungbmt/geo'\r\nimport uniqid from 'uniqid'\r\n\r\nconst getOptions = ({uuid, ...options}) => ({\r\n    format: 'image/png',\r\n    transparent: true,\r\n    ...options\r\n})\r\n\r\nexport const TileWMSLayer = TileLayer.WMS.extend({\r\n    initialize: function(url, options = {}) {\r\n        TileLayer.WMS.prototype.initialize.call(this, url, this.getOptions(options))\r\n        this.uuid = options.uuid ? options.uuid : uniqid()\r\n\r\n    },\r\n\r\n    getOptions,\r\n\r\n    getFeatureInfoUrl: function (latlng, params) {\r\n        return getFeatureInfoUrl(this, latlng, params)\r\n    }\r\n})\r\n\r\nexport const SingleTileWMSLayer = L.NonTiledLayer.WMS.extend({\r\n    initialize: function(url, options = {}) {\r\n        L.NonTiledLayer.WMS.prototype.initialize.call(this, url, this.getOptions(options))\r\n        this.uuid = options.uuid ? options.uuid : uniqid()\r\n    },\r\n\r\n    getOptions,\r\n\r\n    getFeatureInfoUrl: function (latlng, params) {\r\n        return getFeatureInfoUrl(this, latlng, params)\r\n    }\r\n})\r\n\r\nL.tileWMSLayer = tileWMSLayer\r\n\r\nexport function tileWMSLayer(url, {tiled, ...options}) {\r\n    return tiled ? new SingleTileWMSLayer (url, options) : new TileWMSLayer(url, options);\r\n}\r\n\r\n","import L from 'leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl\r\n\r\nimport marker from 'leaflet/dist/images/marker-icon.png'\r\nimport marker2x from 'leaflet/dist/images/marker-icon-2x.png'\r\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png'\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: marker2x,\r\n    iconUrl: marker,\r\n    shadowUrl: markerShadow\r\n})\r\n","export default {\r\n    google: {\r\n        \"control\": \"basemap\",\r\n        \"title\": \"Google\",\r\n        \"active\": true,\r\n        \"type\": \"tile\",\r\n        \"options\": {\r\n            \"url\": \"http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\",\r\n            \"subdomains\": [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\r\n            \"attribution\": \"Map data &copy; <a href='https://www.google.com/maps'>Google Maps</a>\"\r\n        }\r\n    },\r\n    openstreet: {\r\n        \"control\": \"basemap\",\r\n        \"title\": \"OpenStreetMap\",\r\n        \"type\": \"tile\",\r\n        \"options\": {\r\n            \"url\": \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n            \"attribution\": \"&copy; <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\r\n        }\r\n    },\r\n    terrain: {\r\n        \"control\": \"basemap\",\r\n        \"title\": \"Địa hình\",\r\n        \"type\": \"tile\",\r\n        \"options\": {\r\n            \"url\": \"http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}\",\r\n            \"subdomains\": [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\r\n            \"attribution\": \"Map data &copy; <a href='https://www.google.com/maps'>Google Maps</a>\"\r\n        }\r\n    },\r\n    hybrid: {\r\n        \"control\": \"basemap\",\r\n        \"title\": \"Tổng hợp\",\r\n        \"type\": \"tile\",\r\n        \"options\": {\r\n            \"url\": \"http://{s}.google.com/vt/lyrs=y&x={x}&y={y}&z={z}\",\r\n            \"subdomains\": [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\r\n            \"attribution\": \"Map data &copy; <a href='https://www.google.com/maps'>Google Maps</a>\"\r\n        }\r\n    }\r\n}","import React, {memo, useEffect, useState} from 'react'\r\nimport layers from './baselayers'\r\nimport {map, isEmpty} from 'lodash-es'\r\nimport {Map, Marker, Popup, TileLayer, LayersControl, GeoJSON, useLeaflet} from 'react-leaflet'\r\n\r\nconst {BaseLayer, Overlay} = LayersControl\r\n\r\nfunction MapContainer({children, loaded}) {\r\n    const position = [16.3109371, 103.8910913]\r\n\r\n    if(!loaded) return null\r\n\r\n    return (\r\n        <Map center={position} zoom={6} style={{width: '100%', height: '100%'}}>\r\n            <LayersControl position=\"topright\">\r\n                {map(layers, ({title, active = false, options}, k) => (\r\n                    <BaseLayer key={k} checked={active} name={title}>\r\n                        <TileLayer {...options}/>\r\n                    </BaseLayer>\r\n                ))}\r\n\r\n            </LayersControl>\r\n            {children}\r\n        </Map>\r\n    )\r\n}\r\n\r\nMapContainer.defaultProps = {\r\n    loaded: true\r\n}\r\n\r\nexport default memo(MapContainer)","import { tileWMSLayer } from '@ttungbmt/leaflet.wms'\r\nimport { isEqual } from 'lodash-es'\r\nimport PropTypes from 'prop-types'\r\nimport { GridLayer, withLeaflet } from 'react-leaflet'\r\n\r\nconst EVENTS_RE = /^on(.+)$/i\r\n\r\nclass WMSTileLayer extends GridLayer {\r\n    createLeafletElement(props) {\r\n        const {url, boundary, ...params} = props\r\n\r\n        const {leaflet: _l, ...options} = this.getOptions(params)\r\n        return tileWMSLayer(url, options)\r\n    }\r\n\r\n    updateLeafletElement(fromProps: Props, toProps: Props) {\r\n        super.updateLeafletElement(fromProps, toProps)\r\n        const {uuid: preUuid, url: prevUrl, opacity: _po, zIndex: _pz, ...prevProps} = fromProps\r\n        const {leaflet: _pl, ...prevParams} = this.getOptions(prevProps)\r\n        const {uuid, url, opacity: _o, zIndex: _z, ...props} = toProps\r\n        const {leaflet: _l, ...params} = this.getOptions(props)\r\n\r\n        if (uuid !== preUuid) {\r\n            this.leafletElement.uuid = uuid\r\n        }\r\n\r\n        if (url !== prevUrl) {\r\n            this.leafletElement.setUrl(url)\r\n        }\r\n        if (!isEqual(params, prevParams)) {\r\n            this.leafletElement.setParams(params)\r\n        }\r\n    }\r\n\r\n    getOptions(params): Object {\r\n        const superOptions = super.getOptions(params)\r\n        return Object.keys(superOptions).reduce((options, key) => {\r\n            if (!EVENTS_RE.test(key)) {\r\n                options[key] = superOptions[key]\r\n            }\r\n            return options\r\n        }, {})\r\n    }\r\n}\r\n\r\n\r\nWMSTileLayer.propTypes = {\r\n    layers: PropTypes.string.isRequired\r\n}\r\n\r\nexport default withLeaflet(WMSTileLayer)","import React, {memo, useEffect, useState} from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { map, get, isArray, omit } from 'lodash-es'\r\nimport {  useFormContext  } from \"react-hook-form\"\r\nimport $ from 'jquery'\r\nimport 'dependent-dropdown'\r\n\r\nconst transOpts = (opts) => {\r\n    if(!opts) return []\r\n    if(isArray(opts)) return opts\r\n\r\n    return map(opts, (v, k) => ({value: k, label: v}))\r\n}\r\n\r\nconst useUrl = ({url, depends, ajaxSettings, placeholder = 'Chọn...', name, path, ...props}, {setData}) => {\r\n    const { control } = useFormContext()\r\n    useEffect(() => {\r\n        if(url){\r\n          if(depends) {\r\n              let el = get(control, `fieldsRef.current.${name}.ref`)\r\n              $(el).depdrop({\r\n                  depends,\r\n                  url,\r\n                  loadingText: 'Đang tải ...',\r\n                  placeholder,\r\n                  emptyMsg: 'Không có dữ liệu',\r\n                  ajaxSettings\r\n              })\r\n          } else {\r\n              $.get(url, (opts) => {\r\n                  setData(transOpts(path ? get(opts, path) : opts))\r\n              })\r\n          }\r\n        }\r\n    }, [])\r\n}\r\n\r\n\r\nfunction Select({register, children, options, ...props}) {\r\n    const [data, setData] = useState(transOpts(options))\r\n    const dropProps = omit(props, ['ajaxSettings'])\r\n    useUrl(props, {setData})\r\n\r\n    useEffect(() => {\r\n        setData(transOpts(options))\r\n    }, [JSON.stringify(options)])\r\n\r\n    return (\r\n        <Form.Control as=\"select\" ref={register} {...dropProps} defaultValue={props.selected}>\r\n            {data.length > 0 && <option value=\"\">{props.placeholder}</option>}\r\n            {children}\r\n            {map(data, ({value, label}, k) => (<option key={k} value={value}>{label}</option>))}\r\n        </Form.Control>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo, useEffect, useRef } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { get, omit } from 'lodash-es'\r\n// import $ from 'jquery'\r\nimport { useFormContext } from \"react-hook-form\"\r\n// import 'bootstrap-datepicker'\r\n// import 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.vi.min.js'\r\n// import 'bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css'\r\n\r\n// function useDatepicker({as, name}, ref) {\r\n//     const {control, setValue} = useFormContext()\r\n//\r\n//     useEffect(() => {\r\n//         if (as === 'datepicker') {\r\n//             ref.current = get(control, `fields.${name}.ref`)\r\n//             let options = {\r\n//                     format: \"dd/mm/yyyy\",\r\n//                     todayBtn: \"linked\",\r\n//                     clearBtn: true,\r\n//                     language: \"vi\",\r\n//                     autoclose: true,\r\n//                     todayHighlight: true\r\n//                 }\r\n//\r\n//             $(ref.current).datepicker(options).on('changeDate', e => setValue(e.target.value))\r\n//         }\r\n//\r\n//         return () => {\r\n//             if (as === 'datepicker') $(ref.current).datepicker('destroy')\r\n//         }\r\n//     }, [])\r\n//\r\n// }\r\n\r\nfunction Input({register, children, ...props}) {\r\n    let ref = useRef(props)\r\n    // useDatepicker(props, ref)\r\n\r\n    return (\r\n        <Form.Control ref={register} {...omit(props, ['as'])}>\r\n        </Form.Control>\r\n    )\r\n}\r\n\r\nexport default memo(Input)","import React, {memo} from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport {  useFormContext  } from 'react-hook-form'\r\n\r\nimport Select from './Select'\r\nimport Input from './Input';\r\n\r\nfunction Field({children, label, as, ...props}) {\r\n    const { register } = useFormContext()\r\n\r\n    let Control = () => <></>\r\n\r\n    switch (as){\r\n        case 'select':\r\n            Control = Select\r\n            break\r\n        case 'datepicker':\r\n        case 'input':\r\n            Control = Input\r\n            break\r\n        default:\r\n            Control = Input\r\n            break\r\n    }\r\n\r\n\r\n    return (\r\n        <Form.Group>\r\n            {label && <Form.Label>{label}</Form.Label>}\r\n            <Control register={register} {...props} as={as}>\r\n                {children}\r\n            </Control>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default memo(Field)\r\n","import axios from 'axios'\r\nimport {useQuery} from 'react-query'\r\nimport {get, isString, isFunction} from 'lodash-es'\r\nimport isJSON from 'validator/lib/isJSON'\r\n\r\nconst getData = async (key, {url, transformResponse}) => {\r\n    const { data } = await axios({\r\n        url,\r\n        transformResponse: [function (data) {\r\n            if(isJSON(data)) {\r\n                let result = JSON.parse(data)\r\n\r\n                if(isString(transformResponse)) {\r\n                    return get(result, transformResponse)\r\n                } else if(isFunction(transformResponse)){\r\n                    return transformResponse(result)\r\n                }\r\n\r\n                return result\r\n            }\r\n\r\n            return data\r\n        }]\r\n    })\r\n    return data\r\n}\r\n\r\n\r\n\r\nfunction useFetch(props) {\r\n    const {key, url, transformResponse, initialData, manual = false} = props\r\n\r\n    const {data, status, ...request} = useQuery([key, {url, transformResponse}], getData, { manual })\r\n\r\n    return {\r\n        data,\r\n        loading: status === 'success',\r\n        ...request\r\n    }\r\n}\r\n\r\nexport default useFetch","import React, {memo} from 'react'\r\nimport {createContext} from 'react'\r\nimport {useImmerReducer} from 'use-immer'\r\nimport {includes, keys} from 'lodash-es'\r\n\r\nconst initialState = {\r\n    popup: null,\r\n    khuvuc: null,\r\n    result: null\r\n}\r\n\r\nconst caseReducer = {\r\n    ['setKhuvuc']: (state, {payload}) => {\r\n        state.khuvuc = payload\r\n    },\r\n    ['setResult']: (state, {payload}) => {\r\n        state.result = payload\r\n    },\r\n    ['resetResult']: (state, {payload}) => {\r\n        state.result = null\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => includes(keys(caseReducer), action.type) ? caseReducer[action.type](state, action) : state\r\n\r\nconst StoreContext = createContext()\r\n\r\nconst StoreProvider = memo(({initialState, children}) => {\r\n    const [state, dispatch] = useImmerReducer(reducer, initialState)\r\n\r\n    const dispatchfn = (type, payload) => dispatch(({type, payload}))\r\n\r\n    return (\r\n        <StoreContext.Provider value={{...state, dispatch: dispatchfn}}>\r\n            {children}\r\n        </StoreContext.Provider>\r\n    )\r\n})\r\n\r\n\r\nStoreProvider.defaultProps = {initialState}\r\n\r\nexport default StoreContext\r\nexport {StoreProvider}","import React, {memo, useState, useContext} from 'react'\r\nimport {useForm, Form, Field, FormContext} from '@ttungbmt/react.form'\r\nimport {useFetch} from \"@ttungbmt/react.http\";\r\nimport Box from '@ttungbmt/react.ui.box';\r\nimport {find} from 'lodash-es'\r\nimport {useDispatch} from '@ttungbmt/redux.toolkit'\r\n\r\nimport StoreContext from \"contexts/store\"\r\n\r\nfunction Badge({title}) {\r\n    return <Box mb={1} className=\"badge badge-light badge-striped badge-striped-left border-left-primary\" textSm>{title}</Box>\r\n}\r\n\r\nfunction FormMain() {\r\n    const {dispatch: dsp, khuvuc} = useContext(StoreContext)\r\n    const methods = useForm()\r\n\r\n    const {data, loading} = useFetch({\r\n        key: 'todos',\r\n        url: '/api/dm/results',\r\n        transformResponse: 'data',\r\n        initialData: {}\r\n    })\r\n\r\n    const onVung = (e) => {\r\n        let value = parseInt(e.target.value),\r\n            vung = find(data.vungs, {value})\r\n\r\n        dsp('setKhuvuc', vung)\r\n    }\r\n\r\n    const onTinh = (e) => {\r\n        let value = parseInt(e.target.value)\r\n        dsp('setKhuvuc', {cql: 'gid=' + value})\r\n    }\r\n\r\n    const onXuly = (e) => {\r\n        let value = parseInt(e.target.value),\r\n            layers = find(data.results, {value})\r\n\r\n        if (layers) {\r\n            dsp('setResult', {id: layers.value, layers: layers.layers})\r\n        } else {\r\n            dsp('resetResult')\r\n        }\r\n    }\r\n\r\n    if(!loading || !data)  return null\r\n\r\n    return (\r\n        <Box p={1}>\r\n            <FormContext {...methods}>\r\n                <Form>\r\n                   {/* <div>\r\n                        <Badge title={`Khu vực`}/>\r\n                        <Box>\r\n                            <Field\r\n                                className=\"mt-1\"\r\n                                label=\"Vùng\"\r\n                                name=\"mavung\"\r\n                                as=\"select\"\r\n                                options={data.vungs || []}\r\n                                placeholder=\"Chọn vùng...\"\r\n                                id=\"drop-vung\"\r\n                                onChange={onVung}\r\n                            />\r\n                            <Field label=\"Tỉnh\" name=\"matinh\" as=\"select\" url={'/api/dm/tinh'}\r\n                                   placeholder=\"Chọn tỉnh...\" depends={['drop-vung']}\r\n                                   onChange={onTinh}\r\n                            />\r\n                        </Box>\r\n                    </div>*/}\r\n                    <div className=\"mt-2\">\r\n                        <Badge title={`CDI`}/>\r\n                        <Box>\r\n                            <Field\r\n                                name=\"ma_kq\"\r\n                                as=\"select\"\r\n                                options={data.results || []}\r\n                                placeholder=\"Chọn kết quả...\"\r\n                                onChange={onXuly}\r\n                            />\r\n                        </Box>\r\n                    </div>\r\n                </Form>\r\n            </FormContext>\r\n        </Box>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default memo(FormMain)\r\n","import React, {memo, useEffect, useState, useContext} from 'react'\r\nimport {MapContainer, WMSTileLayer, useLeaflet, Popup} from '@ttungbmt/redux-leaflet'\r\nimport {uniqid} from \"@ttungbmt/utils\";\r\nimport {getWMSLayers} from '@ttungbmt/geo'\r\nimport L from \"leaflet\"\r\nimport {http} from '@ttungbmt/react.http'\r\nimport {get} from 'lodash-es'\r\nimport StoreContext from \"contexts/store\";\r\n\r\nfunction useMapClick({setPop}) {\r\n    const {map} = useLeaflet()\r\n\r\n    useEffect(() => {\r\n\r\n        const showInfo = ({latlng}) => {\r\n            let info = {\r\n                uuid: uniqid(),\r\n                position: [latlng.lat, latlng.lng],\r\n                items: []\r\n            }\r\n\r\n\r\n            map.eachLayer(l => {\r\n                if (l._wmsVersion) {\r\n                    let infoUrl = l.getFeatureInfoUrl(latlng)\r\n                    setPop(false)\r\n\r\n                    http.get(infoUrl).then(({data}) => {\r\n                        let props = get(data, 'features.0.properties')\r\n                        if(props) setPop({\r\n                            position: [latlng.lat, latlng.lng],\r\n                            content: `Tọa độ: ${latlng.lat.toFixed(5)}, ${latlng.lng.toFixed(5)} - Giá trị: ${props.val}`\r\n                        })\r\n\r\n                    })\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        map.on('click', showInfo)\r\n\r\n        return () => {\r\n            map.off('click', showInfo)\r\n        }\r\n    }, [])\r\n}\r\n\r\nfunction MapContent() {\r\n    const {result, khuvuc} = useContext(StoreContext)\r\n    const [pop, setPop] = useState()\r\n    useMapClick({setPop})\r\n\r\n    console.log(result, khuvuc)\r\n\r\n\r\n    return (\r\n        <>\r\n            {pop && (\r\n                <Popup position={pop.position}>\r\n                    {pop.content}\r\n                </Popup>\r\n            )}\r\n            {result && <WMSTileLayer layers={result.layers} url={'/geoserver/ows?'} transparent={true} format={'image/png'} zIndex={1000} />}\r\n            {khuvuc && <WMSTileLayer layers={'drought:hc_tinh'} url={'/geoserver/ows?'} transparent={true} format={'image/png'} zIndex={1000} cql_filter={khuvuc.cql} tiled={true}/>}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default memo(MapContent)","import {hot} from 'react-hot-loader/root'\nimport {compose} from '@ttungbmt/redux.toolkit'\nimport React, {memo, useEffect, useState} from 'react'\nimport {Layout as LAYOUT} from \"@ttungbmt/react.layout\"\nimport {MapContainer, WMSTileLayer} from \"@ttungbmt/redux-leaflet\"\nimport Box from '@ttungbmt/react.ui.box'\nimport {FormControl, Nav, Form} from 'react-bootstrap'\nimport FormMain from './FormMain'\nimport MapContent from \"./MapContent\"\nimport StoreContext, {StoreProvider} from './contexts/store'\n\nfunction App() {\n    const [loaded, setLoaded] = useState(false)\n    const Layout = LAYOUT.Map\n\n    useEffect(() => {\n        setTimeout(() => setLoaded(true), 200)\n    }, [])\n\n    return (\n        <StoreProvider>\n            <div className=\"App\">\n                <Layout>\n                    <div slot=\"header\" style={{height: '100%'}}>\n                        <Box flex height={1}>\n                            <Box flex width={380} contentBetween>\n                                <Layout.Brand title={`Quản lý Hạn hán`} />\n                                <button type=\"button\" className=\"cursor-pointer\"><i className=\"icon-paragraph-justify3\"/></button>\n                            </Box>\n                            <Box flex contentBetween grow>\n                                <Box flex>\n                                    <Box selfCenter ml={2} width={350}>\n                                        <Form inline>\n                                            {/*<FormControl type=\"text\" placeholder=\"Tìm kiếm\" className=\"w-full\" style={{width: '100%'}}/>*/}\n                                        </Form>\n                                    </Box>\n                                </Box>\n                                <Box>\n                                    <Nav className=\"nav h-full content-center\">\n                                        <Nav.Link href=\"/admin/gallery\">CMS</Nav.Link>\n                                    </Nav>\n                                </Box>\n                            </Box>\n                        </Box>\n                    </div>\n                    <div slot=\"left-sidebar\">\n                        <FormMain />\n                    </div>\n                    <div slot=\"map-content\" style={{height: '100%'}}>\n                        {loaded && <MapContainer><MapContent /></MapContainer>}\n                    </div>\n                    <div slot=\"right-sidebar\">Right Sidebar</div>\n                    <div slot=\"footer\">Footer</div>\n                </Layout>\n\n            </div>\n        </StoreProvider>\n\n    );\n}\n\nexport default compose(hot, memo)(App)\n","import React, {StrictMode} from 'react'\nimport ReactDOM from 'react-dom'\nimport {serviceWorker} from '@ttungbmt/react.core'\nimport {Provider} from '@ttungbmt/redux.toolkit'\n\nimport store from './store'\nimport './styles/index.scss'\nimport App from './App'\n\n// const {PUBLIC_URL} = process.env\n\nReactDOM.render((\n        <StrictMode>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </StrictMode>\n    ),\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = ReactDOM;"],"sourceRoot":""}